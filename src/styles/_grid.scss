$gutter: 1.25;
$grid-columns: 12;
$col-slug: col !default;
$breakpoints: 576px, 768px, 992px, 1200px, 1400px;
@mixin col-gutter($colspan, $total) {
  $w: (100 / $total) * $colspan;
  flex: 0 0 calc(#{$w}% - #{$gutter}rem);
}
@mixin col-gutterless($colspan, $total) {
  $w: (100 / $total) * $colspan;
  flex: 0 0 #{$w + '%'};
}
@function set-col-slug($break) {
  @if ($break == 576px) {
    @return col-sm;
  } @else if ($break == 768px) {
    @return col-md;
  } @else if ($break == 992px) {
    @return col-lg;
  } @else if ($break == 1200px) {
    @return col-xl;
  } @else if ($break == 1400px) {
    @return col-xxl;
  }
}
.row {
  display: flex;
  flex: 1;
  flex-flow: row;
  flex-wrap: wrap;
  @include margin-sides(-0.625rem, -0.625rem);
  & > [class*="col-"] {
    @include margin-sides(0.625rem, 0.625rem);
  }
}
.col {
  flex: 1;
  @include margin-sides(0.625rem, 0.625rem);
}
.col-auto {
  flex: 0 0 auto;
  @include margin-sides(0.625rem, 0.625rem);
}
// default columns - mobile first
@for $i from 1 through $grid-columns {
  .#{$col-slug}-#{$i} {
    @include col-gutter($i, $grid-columns);
  }
}
.no-gutter {
  @include margin-sides(0, 0);
  & > [class*="col-"] {
    @include margin-sides(0, 0);
  }
  & > .col {
    flex: 1;
    @include margin-sides(0, 0);
  }
  @for $i from 1 through $grid-columns {
    & > .#{$col-slug}-#{$i} {
      @include col-gutterless($i, $grid-columns);
    }
  }
}
// responsive columns
@each $break in $breakpoints {
  @media (min-width: $break) {
    $col-slug: set-col-slug($break);

    @for $i from 1 through $grid-columns {
      .#{$col-slug}-#{$i} {
        @include col-gutter($i, $grid-columns);
      }
    }
    .no-gutter {
      @for $i from 1 through $grid-columns {
        & > .#{$col-slug}-#{$i} {
          @include col-gutterless($i, $grid-columns);
        }
      }
    }
  }
}
